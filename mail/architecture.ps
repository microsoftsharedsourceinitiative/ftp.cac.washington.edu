%!PS-Adobe-2.0
%%Creator: quarto, file: architecture.ps
%%CreationDate: Thu Mar 31 22:39:07 1994
%%Pages: (atend)
%%BoundingBox: 0 0 612 792
%%EndComments

% ---------------------- (routines for "quarto")
% ----------------------(end of "quarto" routines)

%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 6 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: 1 1

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-1) 283.07 36.66 T
67.53 52.51 280 641.1 R
7 X
V
2 12 Q
0 X
(Abstract) 151.46 633.1 T
1 10 Q
1.68 (Pine is a character-based mail and news program) 67.53 615.43 P
3.52 (emphasizing ease-of-use. Other key design goals) 67.53 604.43 P
2.79 (were: full Internet mail interoperability including) 67.53 593.43 P
1.35 (support for multipart, multimedia MIME messages,) 67.53 582.43 P
0.53 (support for a robust client-server email architecture) 67.53 571.43 P
1.04 (using the Interactive Mail Access Protocol \050IMAP\051,) 67.53 560.43 P
1.83 (and integration of mail and network news.  A PC) 67.53 549.43 P
-0.22 (version of Pine was developed to improve integration) 67.53 538.43 P
-0.52 (of the mail system and the desktop file system for DOS) 67.53 527.43 P
0.97 (users.  Pine\050tm\051 is copyrighted but freely available,) 67.53 516.43 P
2.08 (and is in use at more than 2000 sites in over 30) 67.53 505.43 P
1.08 (countries. The paper provides background on Pine,) 67.53 494.43 P
-0.58 (but focuses primarily on the requirements for a global) 67.53 483.43 P
(email system and their design implications.) 67.53 472.43 T
2 12 Q
(I. Intr) 135.89 448.1 T
(oduction) 166.99 448.1 T
0 10 Q
2.99 (Pine is an electronic mail and news program) 81.71 430.43 P
1.6 (designed for ease-of-use, while strictly adhering to) 67.53 419.43 P
4.46 (Internet standards and sound distributed system) 67.53 408.43 P
9.19 (architecture principles.  Although originally) 67.53 397.43 P
2.95 (developed to support a relatively small group of) 67.53 386.43 P
0.68 (people, it is now in use at thousands of sites around) 67.53 375.43 P
1.16 (the world.  Pine has several attributes which are of) 67.53 364.43 P
(general interest:) 67.53 353.43 T
(-) 81.71 336.43 T
8.41 (Pine provides a non-intimidating user) 95.88 336.43 P
(interface.) 95.88 325.43 T
(-) 81.71 308.43 T
0.01 (Pine implements the MIME multimedia email) 95.88 308.43 P
(standard.) 95.88 297.43 T
(-) 81.71 280.43 T
3.98 (Pine supports a gateway-free client-server) 95.88 280.43 P
(architecture.) 95.88 269.43 T
(-) 81.71 252.43 T
(Pine integrates mail and news handling.) 95.88 252.43 T
(-) 81.71 235.43 T
3.18 (Pine is available for both DOS and Unix) 95.88 235.43 P
(systems.) 95.88 224.43 T
1.05 (This paper includes an overview of Pine and its) 81.71 207.43 P
0.66 (history, but not a detailed description of it.  Instead,) 67.53 196.43 P
-0.42 (the majority of the paper is devoted to considering the) 67.53 185.43 P
1.01 (overall requirements for a global email system, and) 67.53 174.43 P
-0.46 (the architecture and protocols needed to support those) 67.53 163.43 P
1.82 (requirements. Pine is one instance of a \322mail user) 67.53 152.43 P
-0.33 (agent\323 or MUA, and MUAs constitute one element of) 67.53 141.43 P
0.38 (the overall email architecture.  Particular attention is) 67.53 130.43 P
2.91 (given to two cornerstone protocols: Multipurpose) 67.53 119.43 P
0.07 (Internet Mail Extensions \050MIME\051 and the Interactive) 67.53 108.43 P
(Mail Access Protocol \050IMAP\051.) 67.53 97.43 T
67.53 74.51 280 89.51 C
67.53 87.5 211.53 87.5 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
0 10 Q
0 X
0 K
-0.13 (1. Dr) 67.53 67.84 P
-0.13 (. Gray is with the University of W) 87.39 67.84 P
-0.13 (ashington.  He) 222.25 67.84 P
(may be reached at) 67.53 56.84 T
1 F
(gray@cac.washington.edu) 142.46 56.84 T
0 F
(.) 249.37 56.84 T
308.48 63.27 520.96 641.09 R
7 X
V
0 X
-0.22 (MIME provides a standard for global multimedia and) 308.48 634.42 P
0.63 (multipart email interoperability, and IMAP provides) 308.48 623.42 P
1.16 (the basis for a robust and flexible distributed email) 308.48 612.42 P
(architecture.) 308.48 601.42 T
15.31 (Competing approaches are considered) 322.65 584.42 P
(throughout.) 308.48 573.42 T
2 12 Q
(II. Email System Requir) 334.54 553.09 T
(ements) 458.93 553.09 T
0 10 Q
(From the end-user) 319.82 535.42 T
(\325) 393.47 535.42 T
(s perspective, the following) 396.24 535.42 T
(email  system requirements hold:) 308.48 523.42 T
(-) 322.65 506.42 T
1.48 (Communicate with anyone, anywhere, using) 336.82 506.42 P
(multimedia email.) 336.82 495.42 T
(-) 322.65 478.42 T
(Access mail from anywhere.) 336.82 478.42 T
(-) 322.65 461.42 T
2.85 (Access mail from multiple computers, and) 336.82 461.42 P
(multiple computer types.) 336.82 450.42 T
(-) 322.65 433.42 T
1.27 (Access multiple mailboxes, including shared) 336.82 433.42 P
(mailboxes.) 336.82 422.42 T
(-) 322.65 405.42 T
0.49 (Easily attach files to messages and save mes-) 336.82 405.42 P
(sages or attachments.) 336.82 394.42 T
(-) 322.65 377.42 T
0.47 (Send and receive authenticated and confiden-) 336.82 377.42 P
(tial mail.) 336.82 366.42 T
(-) 322.65 349.42 T
(An excellent user interface.) 336.82 349.42 T
(-) 322.65 332.42 T
(Same program reads news as well as mail.) 336.82 332.42 T
(-) 322.65 315.42 T
-0.53 (Accommodate large numbers of possibly large) 336.82 315.42 P
(messages.) 336.82 304.42 T
(-) 322.65 287.42 T
(System is available at all times.) 336.82 287.42 T
1.53 (From a system manager's perspective, there are) 322.65 270.42 P
-0.02 (several additional, albeit self-evident, requirements:) 308.48 259.42 P
(-) 322.65 242.42 T
(Configuration flexibility.) 336.82 242.42 T
(-) 322.65 225.42 T
(Ease of configuration.) 336.82 225.42 T
(-) 322.65 208.42 T
(Ease of user support.) 336.82 208.42 T
(-) 322.65 191.42 T
1.13 (Robustness \050high availability and fault toler-) 336.82 191.42 P
(ance\051.) 336.82 180.42 T
(-) 322.65 163.42 T
(Scalability to large numbers of users.) 336.82 163.42 T
(-) 322.65 146.42 T
0.94 (Use of standard transport protocols, even for) 336.82 146.42 P
(dialup.) 336.82 135.42 T
2 12 Q
(III.  Market For) 365.54 117.09 T
(ces) 448.59 117.09 T
0 10 Q
1.48 (The technology to support virtually all of these) 322.65 99.42 P
1.89 (system requirements exists today, but it is not yet) 308.48 88.42 P
0.69 (pervasively deployed.  Battles continue to rage over) 308.48 77.42 P
70.87 664.44 524.41 721.13 R
7 X
V
2 12 Q
0 X
(Architectural Foundations of PINE:) 205.19 713.13 T
(A Multimedia Email and News Client for DOS and Unix) 153.54 694.13 T
0 F
(Terence E. Gray) 255.68 675.13 T
0 10 Q
(1) 334.6 679.93 T
FMENDPAGE
%%EndPage: "1" 0
%%Page: 2 2

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-2) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
2.15 (which of several conflicting approaches to global,) 70.85 714.49 P
2.85 (interoperable email should become the One True) 70.85 703.49 P
(Path.  The key forces are:) 70.85 692.49 T
(-) 85.02 675.49 T
(Mainframe-centric communities.) 99.19 675.49 T
(-) 85.02 658.49 T
(LAN-centric communities.) 99.19 658.49 T
(-) 85.02 641.49 T
(ISO-centric communities.) 99.19 641.49 T
(-) 85.02 624.49 T
(The Internet community.) 99.19 624.49 T
3.72 (The technology one advocates depends on a) 85.02 607.49 P
3.44 (variety of factors, but there does seem to be a) 70.85 596.49 P
-0.42 (troubling tendency among many departmental system) 70.85 585.49 P
6.24 (administrators to focus almost exclusively on) 70.85 574.49 P
-0.23 (communication within one's immediate workgroup at) 70.85 563.49 P
2.2 (the expense of global email interoperability.  The) 70.85 552.49 P
8.15 (explosion of connectivity and interconnected) 70.85 541.49 P
0.07 (information resources around the world suggests that) 70.85 530.49 P
3.21 (building a departmental system where full email) 70.85 519.49 P
4.35 (functionality \050e.g. multimedia\051 is only available) 70.85 508.49 P
(locally is terribly short-sighted.) 70.85 497.49 T
2 12 Q
(IV) 115.22 477.15 T
(. An Internet Solution) 127 477.15 T
0 10 Q
-0.44 (This paper introduces one particular mail program) 85.02 459.49 P
5.71 (called Pine, but perhaps more importantly, it) 70.85 448.49 P
4.8 (describes the distributed email architecture and) 70.85 437.49 P
-0.47 (protocols upon which Pine is based.  This architecture) 70.85 426.49 P
3.03 (offers an approach to achieving the stated email) 70.85 415.49 P
2.8 (system requirements that is unabashedly Internet-) 70.85 404.49 P
0.23 (centric.  While there are significant forces tending to) 70.85 393.49 P
2.97 (fragment the Internet community \050e.g., restrictive) 70.85 382.49 P
0.8 (acceptable use policies, multiprotocolism, etc.\051, it is) 70.85 371.49 P
3.31 (both the natural affinity group for a Carnegie I) 70.85 360.49 P
2.76 (research university such as ours, and the leading) 70.85 349.49 P
3.14 (contender for \322largest operational electronic mail) 70.85 338.49 P
0.99 (system\323 honors.  With the number of Internet hosts) 70.85 327.49 P
-0.4 (now well over a million and growing exponentially, it) 70.85 316.49 P
5.19 (is a safe bet that the Internet mail transport) 70.85 305.49 P
0.16 (infrastructure will figure prominently in any solution) 70.85 294.49 P
(to the \322global electronic village\323 problem.) 70.85 283.49 T
2 12 Q
(V) 118.29 263.15 T
(. System Ar) 125.4 263.15 T
(chitectur) 184.81 263.15 T
(e) 230.55 263.15 T
0 10 Q
1.4 (A major design goal of Pine was to provide an) 85.02 245.49 P
2.14 (excellent, albeit character-based, user interface for) 70.85 234.49 P
2.83 (the computer novice. It goes without saying that) 70.85 223.49 P
1.37 (mailers with excellent user-interfaces are crucial to) 70.85 212.49 P
1.09 (achieving the goal of pervasive electronic mail, but) 70.85 201.49 P
-0.46 (the user-visible aspects of a mailer are only part of the) 70.85 190.49 P
2.63 (solution.  Let's now examine each of the system) 70.85 179.49 P
1.36 (requirements identified previously and try to educe) 70.85 168.49 P
(the system architecture needed to support them.) 70.85 157.49 T
2 F
2.38 (Communicate with anyone, anywhere, using) 85.02 140.49 P
1.72 (multimedia email) 70.85 129.49 P
0 F
1.72 (.  The key to global multimedia) 147.25 129.49 P
0.16 (email interoperability is pervasive deployment of the) 70.85 118.49 P
5.25 (relevant standards.  However, there are many) 70.85 107.49 P
1.27 (alternative email standards and many definitions of) 70.85 96.49 P
-0.47 (what constitutes a standard.  The relevant standards in) 70.85 85.49 P
(the Internet mail world are:) 70.85 74.49 T
311.69 70.85 524.16 721.15 R
7 X
V
0 X
(-) 325.86 714.49 T
(RFC-821) 340.03 714.49 T
0 (Simple Mail Transport Protocol) 396.73 714.49 P
(\050SMTP\051.) 396.73 703.49 T
(-) 325.86 686.49 T
(RFC-822) 340.03 686.49 T
(Header Definition.) 396.73 686.49 T
(-) 325.86 669.49 T
(RFC-1341) 340.03 669.49 T
9.31 (Multipurpose Internet Mail) 396.73 669.49 P
(Extensions \050MIME\051.) 396.73 658.49 T
(-) 325.86 641.49 T
(RFC-1421) 340.03 641.49 T
(Privacy Enhanced Mail \050PEM\051.) 396.73 641.49 T
1.64 (There are recent extensions to SMTP \050e.g. 8bit) 325.86 624.49 P
0.42 (transfer\051 to improve efficiency and robustness of the) 311.69 613.49 P
5.08 (Internet mail transport infrastructure, but those) 311.69 602.49 P
0.21 (extensions are optional, whereas the standards above) 311.69 591.49 P
0.49 (are mandatory if full functional interoperability is to) 311.69 580.49 P
-0.63 (be achieved.  Of course, TCP/IP transport is assumed.) 311.69 569.49 P
2 F
1.52 (Access mail from anywhere) 325.86 552.49 P
0 F
1.52 (.  For purposes of) 447.84 552.49 P
0.69 (this discussion,) 311.69 541.49 P
1 F
0.69 (\322) 376.65 541.49 P
0 F
0.69 (from) 382.21 541.49 P
0.69 (anywhere\323 will be defined as) 404.83 541.49 P
1 F
-0.12 (\322) 311.69 530.49 P
0 F
-0.12 (from) 317.24 530.49 P
-0.12 (any Internet host or via dialup.\323Since one may) 339.05 530.49 P
0.1 (not always have access to an IP-connected Graphical) 311.69 519.49 P
0.77 (User Interface \050GUI\051 mailer, the architecture should) 311.69 508.49 P
1.09 (permit the existence of character-based mailers that) 311.69 497.49 P
-0.54 (can be used via) 311.69 486.49 P
1 F
-0.54 (telnet) 373.36 486.49 P
0 F
-0.54 ( or any async dialup connection.) 395.56 486.49 P
2 F
4.18 (Access mail from multiple computers and) 325.86 469.49 P
0.57 (multiple computer types) 311.69 458.49 P
0 F
0.57 (.  It should be possible for) 416.65 458.49 P
5.43 (individuals who use more than one computer) 311.69 447.49 P
1.06 (\050especially those who use  one type of computer in) 311.69 436.49 P
-0.01 (their office and a different type in a lab or at home or) 311.69 425.49 P
1.25 (while traveling\051 to have full access to at least their) 311.69 414.49 P
2.79 (primary) 311.69 403.49 P
1 F
2.79 (\322) 348.62 403.49 P
0 F
2.79 (inbox) 354.18 403.49 P
1 F
2.79 (.\323) 376.95 403.49 P
0 F
2.79 (  Although most computers can) 385 403.49 P
1 F
0.05 (telnet) 311.69 392.49 P
0 F
0.05 ( to a host with a character-based mailer, for full) 333.9 392.49 P
3.03 (functionality the model must allow for platform-) 311.69 381.49 P
0.61 (specific mailers, each exploiting the native GUI and) 311.69 370.49 P
(accessing a common mail store.) 311.69 359.49 T
-0.49 (Since delivery of one's mail to a desktop computer) 325.86 342.49 P
2.95 (is generally inconsistent with the goal of having) 311.69 331.49 P
3.17 (access to one's mail from multiple computers at) 311.69 320.49 P
1.06 (different times, the architecture must be based on a) 311.69 309.49 P
4.19 (client-server approach. Messages and their state) 311.69 298.49 P
2.47 (information must reside on a mail store remotely) 311.69 287.49 P
3.8 (accessible from multiple computers, and indeed,) 311.69 276.49 P
(multiple types of computers.) 311.69 265.49 T
-0.02 (In our case, the important types of computers are:) 325.86 248.49 P
0.11 (PCs, Macintoshes, Unix systems, X Window System) 311.69 237.49 P
1.76 (terminals \050plus any of these machines emulating a) 311.69 226.49 P
3.63 (character terminal\051. NT and OS/2 may grow in) 311.69 215.49 P
0.29 (importance, but they have not yet become a factor at) 311.69 204.49 P
(our site.) 311.69 193.49 T
2 F
2.58 (Access multiple mailboxes, including shared) 325.86 176.49 P
0.66 (mailboxes) 311.69 165.49 P
0 F
0.66 (.  We see increasing interest in the use of) 354.44 165.49 P
1 F
-0.58 (\322) 311.69 154.49 P
0 F
-0.58 (email delivery filters\323 which separate incoming mail) 317.24 154.49 P
0.67 (traffic into different mailboxes according to subject,) 311.69 143.49 P
0.87 (source, recipient, etc.  Thus, there will be a need to) 311.69 132.49 P
1.18 (allow access to more than one) 311.69 121.49 P
1 F
1.18 (\322) 441.43 121.49 P
0 F
1.18 (inbox) 446.99 121.49 P
1 F
1.18 (.\323) 469.76 121.49 P
0 F
1.18 (  It is even) 477.81 121.49 P
2.08 (possible that the multiple inboxes could reside on) 311.69 110.49 P
(different computers.) 311.69 99.49 T
2.88 (Another important use of email is transaction) 325.86 82.49 P
FMENDPAGE
%%EndPage: "2" 1
%%Page: 3 3

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-3) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
0.23 (processing by a group of people.  Messages sent to a) 70.85 714.49 P
2.4 (shared mailbox are handled by the next available) 70.85 703.49 P
1.4 (person.  This requires a shared mailbox supporting) 70.85 692.49 P
6.36 (concurrent updates of at least message state) 70.85 681.49 P
3.21 (information \050i.e. whether a particular message is) 70.85 670.49 P
(answered, flagged, marked deleted, etc.\051) 70.85 659.49 T
2 F
5.29 (Easily attach files to messages and save) 85.02 642.49 P
1.21 (messages or attachments) 70.85 631.49 P
0 F
1.21 (.  At many sites, desktop) 178.73 631.49 P
-0.51 (computers are used as little more than dumb terminals) 70.85 620.49 P
0.57 (when it comes to network information services such) 70.85 609.49 P
-0.19 (as email. Yet the same machines are used extensively) 70.85 598.49 P
4.58 (for personal productivity, e.g. word processing,) 70.85 587.49 P
-0.23 (spreadsheets.  In such cases, it is very cumbersome to) 70.85 576.49 P
(send a document or spreadsheet to a colleague.) 70.85 565.49 T
1.45 (It should be possible to directly save into one's) 85.02 548.49 P
-0.3 (primary file system a message or message attachment) 70.85 537.49 P
1.99 (stored on the mail server.  Likewise, it should be) 70.85 526.49 P
3.39 (possible to directly incorporate into an outgoing) 70.85 515.49 P
1.88 (message any file in one's primary file system.  In) 70.85 504.49 P
0.36 (particular, it should not be necessary to transfer files) 70.85 493.49 P
0.01 (from one computer to another in order to attach them) 70.85 482.49 P
-0.57 (to a message.  This goal is supported by using a client-) 70.85 471.49 P
1.27 (server architecture with the MUA running on one's) 70.85 460.49 P
(primary computer.) 70.85 449.49 T
2 F
11.68 (Send and receive authenticated and) 85.02 432.49 P
0.43 (confidential mail.) 70.85 421.49 P
0 F
0.43 (  Most email systems are not very) 145.68 421.49 P
0.93 (secure.  The emerging Internet standard for Privacy) 70.85 410.49 P
7.47 (Enhanced Mail provides a sound basis for) 70.85 399.49 P
14.1 (authenticated and \050optionally\051 confidential) 70.85 388.49 P
0.09 (messaging.  As always, pervasive deployment of this) 70.85 377.49 P
(standard is required for global interoperability.) 70.85 366.49 T
2 F
0.85 (An excellent user interface) 85.02 349.49 P
0 F
0.85 (.) 201.1 349.49 P
1 F
0.85 (  \322) 203.6 349.49 P
0 F
0.85 (Standards vary.\323) 215.85 349.49 P
1.86 (Some users prefer command-line interfaces, others) 70.85 338.49 P
1.32 (menus, perhaps most now favor GUIs emphasizing) 70.85 327.49 P
5.58 (\322point-and-shoot\323 operations. When selecting a) 70.85 316.49 P
0.14 (mailer, the user-interface should certainly be a prime) 70.85 305.49 P
4.78 (consideration.  However, there seems to be a) 70.85 294.49 P
1.58 (tendency to let user-interface considerations totally) 70.85 283.49 P
2.51 (dominate the mailer decision, to the exclusion of) 70.85 272.49 P
3.97 (system architecture considerations.  Without the) 70.85 261.49 P
0.01 (proper foundation, some aspects of which will not be) 70.85 250.49 P
-0.33 (apparent in the user-interface, it may be impossible to) 70.85 239.49 P
(achieve the system goals. Caveat emptor.) 70.85 228.49 T
0.01 (Pine is but one mailer among many.  Because use) 85.02 211.49 P
0.94 (via) 70.85 200.49 P
1 F
0.94 (telnet) 86.5 200.49 P
0 F
0.94 (was a requirement, Pine  is character, not) 112.15 200.49 P
0.71 (GUI-based.  Its strength is in providing a low-stress) 70.85 189.49 P
0.38 (environment for reading and sending mail.  Whether) 70.85 178.49 P
2.2 (Pine qualifies as a mailer with \322an excellent user) 70.85 167.49 P
0.29 (interface\323 is left to others to decide.  It will certainly) 70.85 156.49 P
0.99 (not please everyone, yet its success indicates that it) 70.85 145.49 P
-0.19 (fills an important niche. Whether its popularity is due) 70.85 134.49 P
3.63 (more to user-interface design, or the underlying) 70.85 123.49 P
1.74 (protocols and architecture it embraces \050MIME and) 70.85 112.49 P
3.17 (IMAP\051, or its integration of mail and news... is) 70.85 101.49 P
(unclear.) 70.85 90.49 T
311.69 70.85 524.16 721.15 R
7 X
V
0 X
3.67 (In any case, the architecture must allow for) 325.86 714.49 P
2.7 (platform-specific MUAs. It should be possible to) 311.69 703.49 P
3.9 (develop mailers that take full advantage of the) 311.69 692.49 P
0.86 (characteristics of the personal computer being used,) 311.69 681.49 P
(especially its GUI.) 311.69 670.49 T
2 F
2.06 (Same program reads news as well as mail) 330.42 653.49 P
0 F
2.06 (.) 521.66 653.49 P
6.73 (Mail and news \050bulletin boards\051 are related) 311.69 642.49 P
2.19 (technologies with overlapping functionality.  Why) 311.69 631.49 P
3.96 (not offer a consistent user-interface and similar) 311.69 620.49 P
-0.2 (capabilities for both worlds?  Indeed, why not use the) 311.69 609.49 P
4.85 (same program for dealing with both kinds of) 311.69 598.49 P
(messages?  Sounds like a good idea.) 311.69 587.49 T
2 F
0.19 (Accommodate large numbers of possibly large) 325.86 570.49 P
0.85 (messages.) 311.69 559.49 P
0 F
0.85 (  This goal requires explicit consideration) 353.05 559.49 P
0.05 (in all aspects of the architecture, but especially in the) 311.69 548.49 P
-0.39 (design of the mail servers, and MUAs designed to run) 311.69 537.49 P
3.31 (on limited resource desktop computers.  Ideally,) 311.69 526.49 P
0.26 (limits on numbers and sizes of messages should be a) 311.69 515.49 P
1.77 (function of system management policy, not inherit) 311.69 504.49 P
(limits in the system design.) 311.69 493.49 T
2 F
-0.44 (System is available at all times) 325.86 476.49 P
0 F
-0.44 (.  As I grow older,) 453.33 476.49 P
1.3 (there are few characteristics that I value more than) 311.69 465.49 P
0.31 (dependability. Unpredictable and sporadic electronic) 311.69 454.49 P
10.68 (communication is almost worse than no) 311.69 443.49 P
-0.33 (communication.  It is essential to have an architecture) 311.69 432.49 P
(that emphasizes robustness.) 311.69 421.49 T
1.41 (There are plenty of ways distributed computing) 325.86 404.49 P
0.91 (systems can fail. But there are also plenty of things) 311.69 393.49 P
1.82 (system designers can do to improve the odds. For) 311.69 382.49 P
0.23 (example, a clever idea might be to deliver mail to an) 311.69 371.49 P
4.93 (always-up host that is regularly backed-up, as) 311.69 360.49 P
3.26 (opposed to a loosely managed desktop machine.) 311.69 349.49 P
0.43 (There is also the question of whether or not to make) 311.69 338.49 P
-0.52 (email gateways a part of the solution.  A case can \050and) 311.69 327.49 P
0.54 (in a later section, will\051 be made that email gateways) 311.69 316.49 P
(are part of the problem, not the solution.) 311.69 305.49 T
2 12 Q
(VI.  Client-server Appr) 346.08 285.15 T
(oach) 465.78 285.15 T
0 10 Q
2.15 (Several of the objectives discussed above lend) 325.86 267.49 P
0.18 (themselves to, if not dictate, a client-server approach) 311.69 256.49 P
3.39 (to the email architecture.  A client-server email) 311.69 245.49 P
0.72 (system is one where the mail \050at least some of it\051 is) 311.69 234.49 P
1.13 (stored on one machine \050the \322mail server\323, or) 311.69 223.49 P
1 F
1.13 (\322) 500.83 223.49 P
0 F
1.13 (mail) 506.39 223.49 P
1.05 (store\323\051 and is accessed by) 311.69 212.49 P
1 F
1.05 (\322) 422.68 212.49 P
0 F
1.05 (client) 428.23 212.49 P
1 F
1.05 (\323) 450.44 212.49 P
0 F
1.05 ( MUA programs) 456 212.49 P
1.61 (running on different machines.  This strategy is in) 311.69 201.49 P
1.62 (contrast to delivering mail to and storing it on the) 311.69 190.49 P
(same machine that hosts the MUA program.) 311.69 179.49 T
(There are actually three common models:) 325.86 162.49 T
(-) 325.86 145.49 T
1.36 (Mail is delivered to the machine where it is) 340.03 145.49 P
(read.) 340.03 134.49 T
(-) 325.86 117.49 T
0.84 (Mail is delivered to a) 340.03 117.49 P
1 F
0.84 (\322) 431.69 117.49 P
0 F
0.84 (mail drop\323  machine.) 437.25 117.49 P
0.69 (An MUA on a different   machine later pulls) 340.03 106.49 P
1.29 (all of the pending mail to the local machine) 340.03 95.49 P
-0.5 (where it is then read by the MUA as a local file) 340.03 84.49 P
FMENDPAGE
%%EndPage: "3" 2
%%Page: 4 4

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-4) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
(or set of files.) 99.19 714.49 T
(-) 85.02 697.49 T
-0.58 (Mail is delivered to a mail server, and an MUA) 99.19 697.49 P
0.12 (on a different \050client\051 machine   interacts with) 99.19 686.49 P
0.92 (the server on a per-message basis.  The mail) 99.19 675.49 P
0.12 (remains on   the server until explicitly deleted) 99.19 664.49 P
(by the user.) 99.19 653.49 T
0.85 (Independent of where new mail is delivered and) 85.02 636.49 P
1.23 (stored is the question of where saved messages are) 70.85 625.49 P
2.14 (stored.  When an email user saves a message for) 70.85 614.49 P
0.52 (future use, it is typically stored in the user's primary) 70.85 603.49 P
1.62 (file system or home directory.  However, use of a) 70.85 592.49 P
2.65 (client-server mail protocol adds the possibility of) 70.85 581.49 P
-0.02 (storing saved messages on the mail server along with) 70.85 570.49 P
1.04 (the user's inbox or on a completely separate server.) 70.85 559.49 P
3.75 (This can be useful where client machines have) 70.85 548.49 P
-0.3 (minimal resources or are configured without personal) 70.85 537.49 P
-0.38 (file storage, as might be the case in a shared computer) 70.85 526.49 P
(lab.) 70.85 515.49 T
-0.6 (Each of the three models listed above has its place,) 85.02 498.49 P
7.01 (but only the client-server design meets our) 70.85 487.49 P
(requirements.  In particular:) 70.85 476.49 T
(-) 85.02 459.49 T
0.95 (Multiple, platform-specific, MUAs accessing) 99.19 459.49 P
(the same inbox.) 99.19 448.49 T
(-) 85.02 431.49 T
(Concurrent access to shared mailboxes.) 99.19 431.49 T
(-) 85.02 414.49 T
1.72 (Tight coupling of mail system and personal) 99.19 414.49 P
(\050desktop\051 file system.) 99.19 403.49 T
(-) 85.02 386.49 T
(Choice of where to store saved messages.) 99.19 386.49 T
3.78 (In some cases the models can be profitably) 85.02 369.49 P
0.17 (combined.  For example, a timesharing system could) 70.85 358.49 P
0.01 (be configured to act concurrently as a mail server.  A) 70.85 347.49 P
0.45 (user could login and use a mail user agent accessing) 70.85 336.49 P
0.57 (the local mail files, or use an MUA from a different) 70.85 325.49 P
0.1 (machine, perhaps a desktop machine, and access that) 70.85 314.49 P
1.64 (same mail via the client-server protocol. However,) 70.85 303.49 P
0.32 (this idea has limits. For example, pretending that the) 70.85 292.49 P
1.51 (average desktop PC can serve as an adequate mail) 70.85 281.49 P
0.02 (server for even occasional access by other computers) 70.85 270.49 P
0.88 (requires a leap of faith and finds little support from) 70.85 259.49 P
0.08 (available software. In order to be a proper server, the) 70.85 248.49 P
0.47 (desktop machine must be able to export the mailbox) 70.85 237.49 P
0.2 (via a client-server protocol that permits use of a full-) 70.85 226.49 P
(featured MUA on another machine.) 70.85 215.49 T
-0.03 (The client-server approach could be implemented) 85.02 198.49 P
1.3 (using a generic remote file access protocol such as) 70.85 187.49 P
2.13 (NFS.  However, there are integrity issues \050due to) 70.85 176.49 P
4.78 (remote file locking and scaling problems\051 and) 70.85 165.49 P
2.66 (efficiency concerns that argue for an application-) 70.85 154.49 P
0.25 (specific client-server protocol.  One proven solution,) 70.85 143.49 P
(IMAP, will be described in a subsequent section.) 70.85 132.49 T
7.09 (Finally, in order to offer flexibility and) 85.02 115.49 P
4.18 (configurability to the system administrators, the) 70.85 104.49 P
7.8 (overall architecture must allow for per-user) 70.85 93.49 P
0.71 (configuration information and saved messages to be) 70.85 82.49 P
311.69 71.56 524.16 721.15 R
7 X
V
0 X
1.58 (stored either on the personal computer or a shared) 311.69 714.49 P
(computer.  A client-server model supports this goal.) 311.69 703.49 T
2 12 Q
(VII.  Implementation Strategy) 340.31 683.15 T
0 10 Q
1.4 (Distilling the original system requirements with) 325.86 665.49 P
0.29 (some top-level system design decisions, we have the) 311.69 654.49 P
(following objectives:) 311.69 643.49 T
(-) 325.86 626.49 T
6.68 (Global multimedia email interoperability) 340.03 626.49 P
(using Internet standards.) 340.03 615.49 T
(-) 325.86 598.49 T
-0.14 (A client-server architecture to support remote,) 340.03 598.49 P
(multiplatform access.) 340.03 587.49 T
(-) 325.86 570.49 T
-0.62 (Good mail client software for PCs, Macs, Unix) 340.03 570.49 P
(systems and X terminals.) 340.03 559.49 T
(-) 325.86 542.49 T
(Robustness.) 340.03 542.49 T
(-) 325.86 525.49 T
(Scalability.) 340.03 525.49 T
4.07 (The resulting email architecture contains the) 325.86 508.49 P
(following elements:) 311.69 497.49 T
(-) 325.86 480.49 T
0.68 (A high-availability system for incoming mail) 340.03 480.49 P
(storage.) 340.03 469.49 T
(-) 325.86 452.49 T
1.12 (A high-availability system for outgoing mail) 340.03 452.49 P
(dispatch \050SMTP\051.) 340.03 441.49 T
(-) 325.86 424.49 T
0.36 (A client-server protocol for interactive access) 340.03 424.49 P
(to the mail store \050IMAP\051.) 340.03 413.49 T
(-) 325.86 396.49 T
1.8 (A collection of mail-user-agents for various) 340.03 396.49 P
(types of computers.) 340.03 385.49 T
(-) 325.86 368.49 T
(TCP/IP connectivity between all elements.) 340.03 368.49 T
(-) 325.86 351.49 T
4.53 (Compliance with applicable Internet mail) 340.03 351.49 P
(standards in all elements.) 340.03 340.49 T
(-) 325.86 323.49 T
0.46 (An \050optional\051 workgroup or departmental file) 340.03 323.49 P
(server.) 340.03 312.49 T
(-) 325.86 295.49 T
-0.5 (An \050optional\051 NNTP or IMAP server for news.) 340.03 295.49 P
1.48 (The incoming mail store and the outgoing mail) 325.86 278.49 P
-0.4 (host functions may be on separate machines, or added) 311.69 267.49 P
1.09 (functions on the departmental file server. Likewise,) 311.69 256.49 P
-0.29 (the News server may be a separate machine or simply) 311.69 245.49 P
2.15 (another service on the departmental machine. The) 311.69 234.49 P
0.54 (primary protocol for accessing the mail server is the) 311.69 223.49 P
-0.42 (Interactive Mail Access Protocol \050IMAP\051.  News may) 311.69 212.49 P
1.29 (be accessed by either the Network News Transport) 311.69 201.49 P
(Protocol \050NNTP\051 or by IMAP.) 311.69 190.49 T
3.16 (The relationship of major system elements is) 325.86 173.49 P
(represented in the diagram on the next page.) 311.69 162.49 T
0.72 (Notable by their absence in this architecture are) 328.44 145.49 P
2.76 (email gateways.  This is in stark contrast to the) 311.69 134.49 P
1.72 (conventional wisdom of the day, which assumes a) 311.69 123.49 P
-0.08 (collection of dissimilar LAN-centric and Mainframe-) 311.69 112.49 P
1.68 (centric mail systems glued together by multiple or) 311.69 101.49 P
4.89 (multi-lingual gateways. Gateways are obviously) 311.69 90.49 P
5.11 (necessary to link dissimilar email systems, so) 311.69 79.49 P
FMENDPAGE
%%EndPage: "4" 3
%%Page: 5 5

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-5) 283.07 36.66 T
74.33 68.5 286.8 496.66 R
7 X
V
0 X
0.69 (traversing them is sometimes unavoidable.  But that) 74.33 489.99 P
1.34 (doesn't mean you should design) 74.33 478.99 P
1 F
1.34 (your) 210.82 478.99 P
0 F
1.34 ( email system) 229.14 478.99 P
-0.17 (around a gateway strategy!   Gateways tend to reduce) 74.33 467.99 P
1.23 (overall system reliability and in many cases do not) 74.33 456.99 P
2.56 (perfectly preserve the semantics or structure of a) 74.33 445.99 P
4.23 (complex message.  And when they misbehave,) 74.33 434.99 P
(senders, recipients, and postmasters all suffer.) 74.33 423.99 T
2 12 Q
(VIII.  MIME: What and Why?) 101.27 403.66 T
0 10 Q
2.74 (MIME stands for \322Multipurpose Internet Mail) 88.5 385.99 P
2.44 (Extensions\323 and is described in RFC-1341.  It is) 74.33 374.99 P
0.1 (becoming) 74.33 363.99 P
1 F
0.1 (the) 116.34 363.99 P
0 F
0.1 ( canonical method for sending any type) 128.55 363.99 P
2.95 (of file via Internet mail.  It allows one to send) 74.33 352.99 P
11.96 (multipart and multimedia mail, including) 74.33 341.99 P
0.25 (spreadsheets, WP documents, binary data, programs,) 74.33 330.99 P
2.91 (images, audio, etc. There can also be alternative) 74.33 319.99 P
2.48 (representations of the same information sent as a) 74.33 308.99 P
6.86 (multi-part MIME message.  MIME is fully) 74.33 297.99 P
1.45 (compatible with the huge installed base of Internet) 74.33 286.99 P
0.14 (mail transport software, and provides a standard way) 74.33 275.99 P
-0.38 (of identifying, encoding, and decoding binary or 8-bit) 74.33 264.99 P
2.28 (text attachments.  MIME also provides for multi-) 74.33 253.99 P
(national character sets.) 74.33 242.99 T
-0.34 (Most contemporary email packages offer a way to) 88.5 225.99 P
-0.12 (send files as message attachments, but they use many) 74.33 214.99 P
18.46 (different approaches, thus undermining) 74.33 203.99 P
4.18 (interoperability.  It is often necessary for both) 74.33 192.99 P
1.53 (receiver and sender to use identical computers and) 74.33 181.99 P
2.91 (mail software for the exchange to be successful.) 74.33 170.99 P
3.9 (MIME offers the prospect of a standard multi-) 74.33 159.99 P
1.55 (platform solution.  Moreover, MIME includes data) 74.33 148.99 P
5.25 (typing facilities which can hide much of the) 74.33 137.99 P
(attachment and detachment drudgery from the user.) 74.33 126.99 T
3.03 (Since MIME is fairly new, not everyone has) 88.5 109.99 P
1.05 (access to a MIME-capable mailer yet.  Fortunately,) 74.33 98.99 P
-0.51 (interest in MIME is spreading rapidly, and it is clearly) 74.33 87.99 P
1.72 (the best hope for global exchange of multi-part or) 74.33 76.99 P
311.94 77.5 524.41 495.99 R
7 X
V
0 X
2.63 (multimedia messages and binary file attachments.) 311.94 489.32 P
5.05 (Indeed, it is already being used for non-mail) 311.94 478.32 P
-0.54 (applications such as document delivery, and encoding) 311.94 467.32 P
2.48 (binary files for Gopher, WAIS, and Usenet news) 311.94 456.32 P
(services.) 311.94 445.32 T
(In summary, MIME is:) 326.11 428.32 T
(-) 326.11 411.32 T
0.17 (A method for sending binary data via Internet) 340.28 411.32 P
(mail.) 340.28 400.32 T
(-) 326.11 383.32 T
2.13 (Capable of sending WP docs, spreadsheets,) 340.28 383.32 P
(images, audio, code.) 340.28 372.32 T
(-) 326.11 355.32 T
-0.18 (Capable of sending alternative representations) 340.28 355.32 P
(of the same data.) 340.28 344.32 T
(-) 326.11 327.32 T
0.99 (Capable of carrying data type information to) 340.28 327.32 P
(facilitate post processing.) 340.28 316.32 T
(-) 326.11 299.32 T
(Growing rapidly.) 340.28 299.32 T
2 12 Q
(IX.  IMAP: What and Why?) 345.21 280.99 T
0 10 Q
1.13 (IMAP is the \322Interactive Mail Access Protocol\323) 326.11 263.32 P
2.42 (described in RFC-1176. IMAP defines a standard) 311.94 252.32 P
0.88 (way for MUAs \050mail user-agents\051 to interact with a) 311.94 241.32 P
0.78 (mail repository.  It allows manipulation of a remote) 311.94 230.32 P
0.01 (mailbox as if it was local.  IMAP clients for different) 311.94 219.32 P
1.2 (types of computers can access the same mail store,) 311.94 208.32 P
0.71 (and record changes in message state, e.g. marking a) 311.94 197.32 P
-0.12 (particular message as deleted.  IMAP clients can take) 311.94 186.32 P
2.39 (advantage of the particular characteristics of each) 311.94 175.32 P
0.18 (computer type, such as graphical user interfaces, and) 311.94 164.32 P
0.19 (integrate smoothly with the user's personal file store.) 311.94 153.32 P
3.49 (Recent revisions of IMAP also have specialized) 311.94 142.32 P
(support for handling MIME messages.) 311.94 131.32 T
2 F
3.68 (Multi-platform accessibility) 326.11 114.32 P
0 F
3.68 (.  The ability to) 448.33 114.32 P
1.58 (access one's mailbox from multiple computers is a) 311.94 103.32 P
3.27 (key advantage for those who either routinely or) 311.94 92.32 P
1.54 (occasionally use more than one computer.  This is) 311.94 81.32 P
78.72 668.56 503.92 668.56 2 L
1 H
2 Z
N
129.04 682.82 129.04 668.65 2 L
N
78.39 675.65 78.39 661.48 2 L
N
2 F
0.1 (SMTP) 114.96 700.26 S
0.1 (Server) 114.59 688.85 S
214.64 682.68 214.64 668.51 2 L
N
0.1 (IMAP) 201.12 700.12 S
0.1 (Server) 200.19 688.71 S
300.24 682.54 300.24 668.36 2 L
N
0.1 (NNTP) 286.44 699.98 S
0.1 (Server) 285.79 688.56 S
412.16 683.11 412.16 668.93 2 L
N
0.1 (Workgroup/Dept\325l) 371.38 700.55 S
0.1 (File Server) 388.16 689.13 S
505.2 675.65 505.2 661.48 2 L
N
103.71 667.49 103.71 652.94 2 L
N
0.1 (Timeshare) 80.5 640.97 S
0.1 (Host) 93.52 629.26 S
181.15 667.49 181.15 652.94 2 L
N
0.1 (X Host) 166 640.97 S
255.92 667.49 255.92 652.94 2 L
N
0.1 (Unix) 245.45 640.97 S
0.1 (Workstation) 228.44 629.26 S
330.69 667.49 330.69 652.94 2 L
N
0.1 (Mac) 321.11 641.12 S
405.46 667.49 405.46 652.94 2 L
N
0.1 (DOS) 395.04 640.97 S
480.23 667.49 480.23 652.94 2 L
N
0.1 (Comm Server) 449.85 640.97 S
103.71 621.23 103.71 606.68 2 L
N
0.1 (TermServer) 77.13 594.71 S
103.71 586.68 103.71 572.13 2 L
N
0.1 (\050Async Dial\051) 76.6 560.16 S
103.71 552.13 103.71 537.58 2 L
N
0.1 (Terminal/) 81.88 525.61 S
0.1 (Term Emulator) 69.34 513.9 S
481.71 633.54 481.71 619 2 L
N
0.1 (\050SLIP link\051) 457.14 607.03 S
481.71 598.99 481.71 584.45 2 L
N
0.1 (PC/Mac/UnixWS) 444.14 572.48 S
180.38 635.85 180.38 606.68 2 L
N
0.1 (X term) 164.96 594.71 S
FMENDPAGE
%%EndPage: "5" 4
%%Page: 6 6

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-6) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
1 (even more true for those who use multiple types of) 70.85 714.49 P
1.6 (computers.   Some vendor-specific email packages) 70.85 703.49 P
1.89 (embrace both Macs and PCs, but rarely any other) 70.85 692.49 P
1.47 (types of systems. Many do not even support) 70.85 681.49 P
1 F
1.47 (telnet) 261.11 681.49 P
0 F
(access to one's mailbox.) 70.85 670.49 T
2 F
1.35 (Multi-location accessibility) 85.02 653.49 P
0 F
1.35 (.  Since IMAP uses) 201.03 653.49 P
2.03 (TCP/IP, it works anywhere in the Internet.  Also,) 70.85 642.49 P
6.69 (since there are character-based IMAP clients) 70.85 631.49 P
0.57 (available, an IMAP mail store can be accessed from) 70.85 620.49 P
2.32 (anywhere in the Internet via the ubiquitous) 70.85 609.49 P
1 F
2.32 (telnet) 261.11 609.49 P
0 F
2.29 (protocol.  Interactive access to one's mail via the) 70.85 598.49 P
-0.5 (Internet is particularly useful to anyone who travels to) 70.85 587.49 P
5.29 (other institutions, but the same approach also) 70.85 576.49 P
1.68 (embraces local dialup access.  Remote access to a) 70.85 565.49 P
2.66 (LAN-centric mail store is rarely possible without) 70.85 554.49 P
1.84 (resorting to use of a vendor-specific dialup access) 70.85 543.49 P
(protocol.) 70.85 532.49 T
2 F
4.35 (Concurrent mailbox access) 85.02 515.49 P
0 F
4.35 (.  IMAP allows) 209.2 515.49 P
1.09 (multiple clients to read the same mailbox, although) 70.85 504.49 P
-0.61 (possibly only one of them will have read-write access.) 70.85 493.49 P
0.57 (If a suitable mailbox format is chosen for the IMAP) 70.85 482.49 P
0.1 (server, it is possible to share a mailbox with multiple) 70.85 471.49 P
0.02 (clients concurrently updating state information.  This) 70.85 460.49 P
0.68 (is very useful if several people are processing email) 70.85 449.49 P
(requests coming into a single mailbox.) 70.85 438.49 T
3.07 (A companion protocol to IMAP called IMSP) 85.02 421.49 P
-0.3 (\050Interactive Mail Support Protocol\051 is currently under) 70.85 410.49 P
0.94 (development at Carnegie Mellon University.  IMSP) 70.85 399.49 P
-0.46 (will provide tools to conveniently manage large email) 70.85 388.49 P
(installations with many IMAP servers.) 70.85 377.49 T
2 12 Q
(X.  IMAP vs. POP) 130.45 357.15 T
0 10 Q
3.53 (POP \050\322Post Office Protocol\323\051 is a store-and-) 85.02 339.49 P
0.05 (forward protocol for moving email from a drop point) 70.85 328.49 P
-0.27 (to a single final destination, usually a PC or Mac hard) 70.85 317.49 P
-0.07 (disk.  Once delivered to the PC or Mac, the messages) 70.85 306.49 P
-0.32 (are typically deleted from the POP server.  POP is not) 70.85 295.49 P
2.3 (well-suited for the goals of accessing one's inbox) 70.85 284.49 P
4.14 (from different places and different machines at) 70.85 273.49 P
2.79 (different times.  However, from a system design) 70.85 262.49 P
-0.06 (perspective, POP is still a more robust foundation for) 70.85 251.49 P
4.69 (a distributed email system than vendor-specific) 70.85 240.49 P
(systems requiring gateways to Internet mail.) 70.85 229.49 T
0.95 (In comparing POP with IMAP, here are the key) 85.02 212.49 P
(points:) 70.85 201.49 T
(\245) 85.02 184.49 T
(Two different paradigms:) 99.19 184.49 T
(-) 99.19 167.49 T
(POP  =  store-and-forward) 113.37 167.49 T
(-) 99.19 150.49 T
(IMAP  =  client-server) 113.37 150.49 T
(\245) 85.02 133.49 T
(POP advantages:) 99.19 133.49 T
(-) 99.19 116.49 T
(Minimum use of connect time) 113.37 116.49 T
(-) 99.19 99.49 T
(Minimum use of server resources) 113.37 99.49 T
(-) 99.19 82.49 T
(More software currently available) 113.37 82.49 T
311.69 70.85 524.16 721.15 R
7 X
V
0 X
(\245) 325.86 714.49 T
(IMAP advantages:) 340.03 714.49 T
(-) 340.03 697.49 T
(Multiplatform access to remote mailboxes) 354.21 697.49 T
(-) 340.03 680.49 T
(Efficient management of large mailboxes) 354.21 680.49 T
(-) 340.03 663.49 T
(Faster startup) 354.21 663.49 T
(-) 340.03 646.49 T
(Can create and append to remote folders) 354.21 646.49 T
(-) 340.03 629.49 T
(Ability to use server for searching) 354.21 629.49 T
(-) 340.03 612.49 T
(Usable over low-speed links) 354.21 612.49 T
(-) 340.03 595.49 T
(Can deal with very large messages) 354.21 595.49 T
(-) 340.03 578.49 T
3.48 (Allows fetching individual MIME seg-) 354.21 578.49 P
(ments \050or parts\051) 354.21 567.49 T
(-) 340.03 550.49 T
-0.1 (Suitable for non-email info; e.g., NetNews) 354.21 550.49 P
1.88 (POP is of interest in situations where the only) 325.86 533.49 P
3.59 (access to a mail server is via expensive dialup) 311.69 522.49 P
5.11 (connections and multi-platform access to one's) 311.69 511.49 P
4.55 (inbox\050es\051 is not needed.  It is also useful in) 311.69 500.49 P
2.36 (environments where client machines are resource-) 311.69 489.49 P
-0.6 (rich and servers are resource-poor.  Note however that) 311.69 478.49 P
1.05 (IMAP offers a superset of POP functionality, so an) 311.69 467.49 P
-0.33 (IMAP client could choose to operate in) 311.69 456.49 P
1 F
-0.33 (\322) 468.96 456.49 P
0 F
-0.33 (POP mode.\323) 474.52 456.49 P
2 12 Q
(XI.  IMAP Clients) 371.29 436.15 T
0 10 Q
2.55 (Interest in IMAP is growing.  There are now) 325.86 418.49 P
3.71 (several commercial companies developing IMAP) 311.69 407.49 P
-0.34 (software, and more freely available IMAP software is) 311.69 396.49 P
-0.33 (also appearing.  IMAP servers for Unix and TOPS-20) 311.69 385.49 P
1.77 (have been available for many years, and a port to) 311.69 374.49 P
0.17 (Windows NT is expected soon.  An IMAP server for) 311.69 363.49 P
(VMS is commercially available.) 311.69 352.49 T
2.91 (Here are some of the IMAP clients currently) 325.86 335.49 P
(available:) 311.69 324.49 T
(-) 325.86 307.49 T
0.43 (For Macintosh:  MacMS and Mailstrom from) 340.03 307.49 P
(Stanford) 340.03 296.49 T
(-) 325.86 279.49 T
(For DOS:  PC-Pine from UW) 340.03 279.49 T
(-) 325.86 262.49 T
(For Unix systems:  Pine from UW) 340.03 262.49 T
(-) 325.86 245.49 T
-0.43 (For NEXTSTEP:  MailManager and EasyMail) 340.03 245.49 P
(from UW) 340.03 234.49 T
(-) 325.86 217.49 T
6.45 (For X Window System: XIMAP from) 340.03 217.49 P
(Stanford) 340.03 206.49 T
0.77 (A company in Canada is developing a Windows) 325.86 189.49 P
2.17 (IMAP client, and there are also IMAP clients for) 311.69 178.49 P
(TOPS-20 and various LISP machines.) 311.69 167.49 T
0.85 (The X, NEXTSTEP, and Mac clients all use the) 325.86 150.49 P
1.26 (native GUI of their respective platforms.  Pine and) 311.69 139.49 P
(PC-Pine are character-based.) 311.69 128.49 T
2 12 Q
(XII.  Mail vs. News) 368.95 110.15 T
0 10 Q
2.63 (At most sites, mail and bulletin board \050news\051) 325.86 92.49 P
0.95 (access are treated as completely different problems,) 311.69 81.49 P
FMENDPAGE
%%EndPage: "6" 5
%%Page: 7 7

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-7) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
0.04 (yet there is a great deal of similarity between the two) 70.85 714.49 P
2.38 (worlds.  A growing number of people have been) 70.85 703.49 P
1.63 (wondering why the same tools couldn't be used to) 70.85 692.49 P
2.04 (access both mail messages and news articles. Our) 70.85 681.49 P
4.22 (conclusion was that there needed to be a few) 70.85 670.49 P
0.98 (differences in the user interface when reading news) 70.85 659.49 P
9.59 (vs. mail, but that the commonality was) 70.85 648.49 P
-0.33 (overwhelming, so it made good sense to have a single) 70.85 637.49 P
0.6 (tool that could do both.  Given the distributed email) 70.85 626.49 P
0.86 (architecture described above, the basic functionality) 70.85 615.49 P
(was already in place.) 70.85 604.49 T
0.77 (News is usually accessed via the Network News) 85.02 587.49 P
0.02 (Transport Protocol \050NNTP\051, however IMAP can also) 70.85 576.49 P
0.24 (be used to access a news database.  The basic choice) 70.85 565.49 P
1.09 (is whether personal message-state  information \050the) 70.85 554.49 P
1 F
0.07 (\322) 70.85 543.49 P
0 F
0.07 (.newsrc) 76.4 543.49 P
1 F
0.07 (\323) 107.21 543.49 P
0 F
0.07 ( file\051 is stored on the user's primary \050local\051) 112.76 543.49 P
3.11 (machine, or on the central news server.  NNTP) 70.85 532.49 P
3.21 (assumes the .newsrc file is on the \050local\051 client) 70.85 521.49 P
1.12 (machine; IMAP assumes it is on the central server.) 70.85 510.49 P
0.36 (Both models have their place, and both are currently) 70.85 499.49 P
1.25 (in use.  Just as with the question of where to store) 70.85 488.49 P
0.14 (saved messages \050locally or remotely\051 it is up to users) 70.85 477.49 P
0.57 (and system managers to pick the configuration most) 70.85 466.49 P
(appropriate for a particular site.) 70.85 455.49 T
2 12 Q
(XIII.  Roads Not T) 117.17 435.15 T
(aken) 212.35 435.15 T
0 10 Q
3.63 (What has been presented herein is an email) 85.02 417.49 P
3.95 (architecture that is purported to have numerous) 70.85 406.49 P
0.2 (desirable properties \050amazing restorative powers, the) 70.85 395.49 P
4.45 (ability to inhibit aging, etc.\051 But against what) 70.85 384.49 P
(alternatives should this approach be compared?) 70.85 373.49 T
(Let's review the options:) 85.02 356.49 T
(\245) 85.02 339.49 T
1 F
-0.48 (Mainframe-centric solutions) 99.19 339.49 P
0 F
-0.48 (.  These are more-) 212.81 339.49 P
3.84 (or-less by definition architecturally closed) 99.19 328.49 P
0.5 (systems.  Being able to take advantage of the) 99.19 317.49 P
-0.45 (native GUI of common desktop platforms, and) 99.19 306.49 P
2.19 (tightly integrate mail with the personal file) 99.19 295.49 P
0.61 (system are possibilities simply not within the) 99.19 284.49 P
1.18 (scope of these designs.  Also, in the case of) 99.19 273.49 P
3.29 (vendor-specific systems, it is necessary to) 99.19 262.49 P
0.97 (traverse a gateway to reach the Internet mail) 99.19 251.49 P
2.14 (world, and those gateways typically do not) 99.19 240.49 P
(support MIME or PEM.) 99.19 229.49 T
(\245) 85.02 212.49 T
1 F
1.32 (LAN-centric solutions) 99.19 212.49 P
0 F
1.32 (.  These are by far the) 188.53 212.49 P
-0.26 (most seductive.  They typically offer excellent) 99.19 201.49 P
-0.06 (user-interfaces, and increasingly sophisticated) 99.19 190.49 P
5.35 (integration of mail with other \050personal) 99.19 179.49 P
0.46 (productivity\051 applications. However, if one is) 99.19 168.49 P
-0.59 (interested in global interoperability, they come) 99.19 157.49 P
0.52 (with two serious disadvantages: \0501\051 it usually) 99.19 146.49 P
0.74 (takes a long time for Internet standards to be) 99.19 135.49 P
0.75 (integrated into these systems, although a few) 99.19 124.49 P
1 F
1.01 (\322) 99.19 113.49 P
0 F
1.01 (mainstream) 104.75 113.49 P
1 F
1.01 (\323) 151.39 113.49 P
0 F
1.01 ( vendors are now beginning to) 156.94 113.49 P
1.63 (pay more attention to Internet requirements,) 99.19 102.49 P
0.33 (and \0502\051 since all of the LAN-centric offerings) 99.19 91.49 P
-0.44 (require some form of gateway for access to the) 99.19 80.49 P
311.69 70.85 524.16 721.15 R
7 X
V
0 X
3.46 (Internet, there is a risk that the semantic) 340.03 714.49 P
1.68 (mismatches between the LAN email system) 340.03 703.49 P
-0.58 (and the Internet email system will result in loss) 340.03 692.49 P
4.81 (of information when structured messages) 340.03 681.49 P
1.09 (traverse the gateway.  The result is typically) 340.03 670.49 P
1 F
0.34 (\322) 340.03 659.49 P
0 F
0.34 (islands of partial connectivity.\323  In addition,) 345.59 659.49 P
1.35 (there are architectural disadvantages relating) 340.03 648.49 P
0.11 (to local interoperability and flexibility.  There) 340.03 637.49 P
(may be exceptions, but in general:) 340.03 626.49 T
(-) 340.03 609.49 T
-0.52 (Remote access to one's mail requires use of) 354.21 609.49 P
(a vendor-specific protocol.) 354.21 598.49 T
(-) 340.03 581.49 T
0.85 (Mail access is via vendor-specific remote) 354.21 581.49 P
(file access protocols.) 354.21 570.49 T
(-) 340.03 553.49 T
0.47 (Client machines other than PCs and Macs) 354.21 553.49 P
(are usually not supported.) 354.21 542.49 T
(-) 340.03 525.49 T
-0.58 (It is often not even possible to use) 354.21 525.49 P
1 F
-0.58 (telnet) 488.38 525.49 P
0 F
-0.58 ( for) 510.59 525.49 P
(mail access.) 354.21 514.49 T
(\245) 325.86 497.49 T
1 F
6.9 (ISO-centric solutions.) 340.03 497.49 P
0 F
6.9 (X.400 is often) 453.45 497.49 P
0.36 (represented as the wave of the future, the one) 340.03 486.49 P
8.55 (unifying email solution behind which) 340.03 475.49 P
0.39 (everyone should rally.  Certainly every major) 340.03 464.49 P
-0.12 (vendor and every trade magazine presents this) 340.03 453.49 P
-0.52 (view continuously.  Is it true?  Or, is it possible) 340.03 442.49 P
4.04 (that every major vendor and every trade) 340.03 431.49 P
7.86 (magazine has underestimated both the) 340.03 420.49 P
2.79 (problems with the X.400 standard and the) 340.03 409.49 P
4.46 (significance of the large and explosively) 340.03 398.49 P
-0.22 (growing Internet email installed base? Hard to) 340.03 387.49 P
0.11 (believe, but many people including the author) 340.03 376.49 P
2.16 (have come to the second conclusion.  It is) 340.03 365.49 P
1.57 (beyond the scope of this paper to argue the) 340.03 354.49 P
0.66 (point, but suffice it to say that one need look) 340.03 343.49 P
-0.42 (no further than X.400 address syntax to realize) 340.03 332.49 P
(that this was the work of a committee.) 340.03 321.49 T
0.01 (Another issue concerns scalability.  In addition to) 325.86 304.49 P
0.32 (the obvious issues of limits on mailbox and message) 311.69 293.49 P
1.36 (sizes\321which in some systems can be astoundingly) 311.69 282.49 P
-0.36 (low\321there is a question of how many people you can) 311.69 271.49 P
4.59 (send email to.  All of the non-Internet email) 311.69 260.49 P
0.99 (approaches have at least) 311.69 249.49 P
1 F
0.99 (some) 415.01 249.49 P
0 F
0.99 ( implementations that) 435.55 249.49 P
-0.04 (assume everyone you ever want to talk to will be in a) 311.69 238.49 P
3.1 (local address book.  This is necessary in X.400) 311.69 227.49 P
-0.42 (products because of the awkwardness of native X.400) 311.69 216.49 P
2.13 (addresses, and the present lack of a global X.500) 311.69 205.49 P
3.08 (directory infrastructure. By contrast Internet mail) 311.69 194.49 P
0.99 (systems, based on simple addressing, are inherently) 311.69 183.49 P
0.05 (open-ended.  They) 311.69 172.49 P
1 F
0.05 (allow) 388.99 172.49 P
0 F
0.05 ( address books, but are fully) 411.21 172.49 P
2.98 (usable to reach people who are not in the local) 311.69 161.49 P
(database.) 311.69 150.49 T
-0.51 (Last, but not least, there is the question of gateway) 325.86 133.49 P
1 F
2.39 (robustness) 311.69 122.49 P
0 F
2.39 (.  By definition, all of the non-Internet) 354.44 122.49 P
-0.22 (email approaches require a gateway to exchange mail) 311.69 111.49 P
-0.49 (with Internet hosts.  Unfortunately, a disproportionate) 311.69 100.49 P
-0.5 (number of email problems have their roots in gateway) 311.69 89.49 P
3.98 (bugs, configuration problems, or low-availability) 311.69 78.49 P
FMENDPAGE
%%EndPage: "7" 6
%%Page: 8 8

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-8) 283.07 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
0 X
0.16 (LAN servers acting as email gateways.  Just recently) 70.85 714.49 P
3.83 (a large email distribution list received nearly a) 70.85 703.49 P
1.92 (hundred bogus messages due to an email gateway) 70.85 692.49 P
1.44 (problem.  In some cases, gateway software is only) 70.85 681.49 P
-0.45 (available for DOS platforms.  A few of these products) 70.85 670.49 P
4.46 (cannot even sustain multiple simultaneous TCP) 70.85 659.49 P
(connections.) 70.85 648.49 T
1.34 (In fairness, let's close this section by disclosing) 85.02 631.49 P
6.47 (the disadvantages of the recommended email) 70.85 620.49 P
2.2 (architecture.  Because both MIME and IMAP are) 70.85 609.49 P
0.38 (relatively new, the choices for IMAP client software) 70.85 598.49 P
1.56 (are still rather limited, especially for IMAP clients) 70.85 587.49 P
2.97 (that support MIME.  Although PC-Pine supports) 70.85 576.49 P
2.54 (both, it is a DOS, rather than a native Windows) 70.85 565.49 P
0.73 (application. Thus it is character-based, and does not) 70.85 554.49 P
0.81 (purport to offer a state-of-the-art GUI.  Fortunately,) 70.85 543.49 P
0.22 (MIME already has a critical mass of vendor support,) 70.85 532.49 P
-0.12 (and interest in IMAP is growing.  It shouldn't be long) 70.85 521.49 P
4.42 (before one can have the best of both worlds:) 70.85 510.49 P
-0.53 (contemporary GUIs plus superior interoperability and) 70.85 499.49 P
(architecture.) 70.85 488.49 T
8.14 (As mentioned, our global interoperability) 85.02 471.49 P
-0.38 (requirement can be partially achieved via gateways to) 70.85 460.49 P
12.18 (vendor-specific systems.  However, their) 70.85 449.49 P
1.69 (architectural foundations make them unsuitable for) 70.85 438.49 P
0.25 (sites that must accommodate more than just PCs and) 70.85 427.49 P
3.76 (Macs, or that wish to control support costs by) 70.85 416.49 P
1.82 (focusing on Internet protocols rather than multiple) 70.85 405.49 P
(vendor-specific protocols.) 70.85 394.49 T
12.03 (Looking ahead, one wonders whether) 85.02 377.49 P
1 F
1.8 (\322) 70.85 366.49 P
0 F
1.8 (mainstream) 76.4 366.49 P
1 F
1.8 (\323) 123.04 366.49 P
0 F
1.8 ( mail software will interoperate with) 128.6 366.49 P
8.28 (Internet-standard authentication technology, or) 70.85 355.49 P
5.89 (whether history will repeat itself and system) 70.85 344.49 P
6.26 (managers will be forced to support multiple) 70.85 333.49 P
4.55 (authentication systems, each with its own user) 70.85 322.49 P
2.13 (database.  Can't we do better?  This problem has) 70.85 311.49 P
2.8 (already been solved and the technology is freely) 70.85 300.49 P
(available.) 70.85 289.49 T
2 12 Q
(XIV) 117.99 269.15 T
(.  Pine Backgr) 138.43 269.15 T
(ound) 210.17 269.15 T
0 10 Q
2.99 (Pine is a mailer designed specifically for the) 85.02 251.49 P
1.22 (novice computer user, but with optional commands) 70.85 240.49 P
1.27 (available for) 70.85 229.49 P
1 F
1.27 (\322) 126.11 229.49 P
0 F
1.27 (power users.\323 It is based on Internet) 131.67 229.49 P
2.42 (mail protocols \050e.g. RFC-822, SMTP, IMAP, and) 70.85 218.49 P
0.75 (MIME\051 and currently runs on DOS and a variety of) 70.85 207.49 P
(UNIX platforms.) 70.85 196.49 T
0.86 (The guiding principles for achieving ease-of-use) 85.02 179.49 P
2.91 (in Pine were: careful limitation of features, one-) 70.85 168.49 P
6.8 (character mnemonic commands, always-present) 70.85 157.49 P
-0.03 (command menus, immediate user feedback, and high) 70.85 146.49 P
1.26 (tolerance for user mistakes. It is intended that Pine) 70.85 135.49 P
2.32 (can be learned by exploration rather than reading) 70.85 124.49 P
6.87 (manuals.  Feedback from the University of) 70.85 113.49 P
2.1 (Washington community and a growing number of) 70.85 102.49 P
0.78 (Internet sites has been encouraging.   A stand-alone) 70.85 91.49 P
-0.32 (version of Pico, Pine's message composition editor, is) 70.85 80.49 P
311.69 70.85 524.16 721.15 R
7 X
V
0 X
0.04 (also available. It is a very simple and easy to use text) 311.69 714.49 P
(editor with text justification and a spelling checker.) 311.69 703.49 T
2 12 Q
(XV) 370.51 683.15 T
(.  Pine Featur) 386.28 683.15 T
(es) 455.35 683.15 T
0 10 Q
(-) 325.86 665.49 T
4.24 (Mail index showing a message summary) 340.03 665.49 P
1.16 (which includes the status,  sender, size, date) 340.03 654.49 P
(and subject of messages.) 340.03 643.49 T
(-) 325.86 626.49 T
2.74 (View and process mail with the following) 340.03 626.49 P
4.02 (commands:  forward, reply, save, export,) 340.03 615.49 P
(print, delete, capture address and search.) 340.03 604.49 T
(-) 325.86 587.49 T
5.79 (Address book for saving long complex) 340.03 587.49 P
-0.4 (addresses and personal  distribution lists under) 340.03 576.49 P
(a nickname.) 340.03 565.49 T
(-) 325.86 548.49 T
5.64 (Multiple folders and folder management) 340.03 548.49 P
(screen for filing messages.) 340.03 537.49 T
(-) 325.86 520.49 T
3.42 (Message composer with easy-to-use editor) 340.03 520.49 P
-0.47 (and spelling checker.    The message composer) 340.03 509.49 P
4.57 (also assists with entering and formatting) 340.03 498.49 P
2.29 (addresses and provides direct access to the) 340.03 487.49 P
(address book.) 340.03 476.49 T
(-) 325.86 459.49 T
4.6 (Online help specific to each screen and) 340.03 459.49 P
(context.) 340.03 448.49 T
(-) 325.86 431.49 T
2.13 (Supports access to remote mail repositories) 340.03 431.49 P
-1.63 (via the IMAP2 protocol  defined in RFC-1176.) 340.03 420.49 P
(-) 325.86 403.49 T
3.9 (Support for multipart mail conforming to) 340.03 403.49 P
1.4 (proposed MIME Internet      standard. This) 340.03 392.49 P
0.89 (allows attachments to mail messages such as) 340.03 381.49 P
0.42 (graphics      \050GIF, TIFF...\051, sounds, and other) 340.03 370.49 P
(files such as spreadsheets and      binary files.) 340.03 359.49 T
(-) 325.86 342.49 T
(User-configurable feature levels.) 340.03 342.49 T
2 12 Q
(XVI.  Pine History) 370.29 324.15 T
0 10 Q
5.96 (In the spring of 1989, the University of) 325.86 306.49 P
15.47 (Washington's Office of Computing &) 311.69 295.49 P
0.58 (Communications began searching for an easy-to-use) 311.69 284.49 P
-0.4 (character-based mailer that ran on Unix systems.  The) 311.69 273.49 P
1.91 (target audience was University administrators who) 311.69 262.49 P
3.19 (were then using an MVS program derived from) 311.69 251.49 P
3.97 (UCLA\325s BEN mailer.  After a few months of) 311.69 240.49 P
0.49 (searching and evaluating the options available at the) 311.69 229.49 P
0.25 (time, including several X Window System offerings,) 311.69 218.49 P
0.4 (we concluded that none of them met our ease-of-use) 311.69 207.49 P
0.22 (goals.  Thus the Friendly Unix Mail Project \050FUMP\051) 311.69 196.49 P
-0.27 (was begun.  It was decided to start with Elm code and) 311.69 185.49 P
-0.57 (incrementally modify it to meet our needs.  In keeping) 311.69 174.49 P
0.2 (with Elm's arborist roots,) 311.69 163.49 P
1 F
0.2 (\322Pine\323) 415.64 163.49 P
0 F
0.2 ( was selected as the) 445.07 163.49 P
0.14 (new mailer's name.  Pine was not originally intended) 311.69 152.49 P
1.22 (to be an acronym, but inevitably it was turned into) 311.69 141.49 P
0.69 (one.  There are several versions, including  \322Pine Is) 311.69 130.49 P
0.29 (No-longer Elm,\323  since there is hardly any Elm code) 311.69 119.49 P
-0.08 (left in it anymore, and \322Program for Internet News &) 311.69 108.49 P
4.75 (Email.\323 Laurence Lundblade was given overall) 311.69 97.49 P
0.13 (responsibility for the project, and Mike Seibel joined) 311.69 86.49 P
3.9 (soon after to focus \050initially\051 on the Composer) 311.69 75.49 P
FMENDPAGE
%%EndPage: "8" 7
%%Page: 9 9

612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-9) 283.07 36.66 T
70.85 60.01 283.32 721.15 R
7 X
V
0 X
3.31 (module, which later was extracted from Pine to) 70.85 714.49 P
2.24 (become a stand-alone editor called Pico \050for Pine) 70.85 703.49 P
(composer\051.) 70.85 692.49 T
0.71 (The earliest versions of Pine were in limited use) 85.02 675.49 P
-0.01 (by the end of 1989. In January 1990, the current Pine) 70.85 664.49 P
-0.49 (version was 0.6. During the rest of 1990, the user base) 70.85 653.49 P
1.72 (continued to grow as the program continued to be) 70.85 642.49 P
0.64 (refined. It was not long before the original audience) 70.85 631.49 P
3.21 (of University administrators was dwarfed by the) 70.85 620.49 P
3.83 (number of faculty, staff, and students who had) 70.85 609.49 P
0.88 (voluntarily migrated to Pine from a variety of other) 70.85 598.49 P
(Unix, VMS, and VM/CMS mailers.) 70.85 587.49 T
2.24 (In February 1991, Pine 1.01\321the first version) 85.02 570.49 P
1.68 (with IMAP support\321was operational, using the c-) 70.85 559.49 P
2.83 (client email tool kit developed by Mark Crispin.) 70.85 548.49 P
0.39 (However, it took six months to smooth rough edges,) 70.85 537.49 P
1.05 (so the production release of the first IMAP-capable) 70.85 526.49 P
(Pine didn't occur until September 1991.) 70.85 515.49 T
-0.02 (In August 1991 we were contacted by folks at the) 85.02 498.49 P
5.58 (Texas Education Network \050TENET\051 about the) 70.85 487.49 P
2.55 (prospect of using Pine to provide electronic mail) 70.85 476.49 P
-0.05 (service to K-12 teachers throughout Texas.  This was) 70.85 465.49 P
1.58 (the first instance of significant Pine use outside of) 70.85 454.49 P
3.87 (UW, and the feedback from TENET was most) 70.85 443.49 P
(gratifying.) 70.85 432.49 T
0.36 (January 1992 brought the release of Pine 2.0, the) 85.02 415.49 P
1.92 (first public source distribution.  In March 1992, a) 70.85 404.49 P
3.58 (version was available that contained a primitive) 70.85 393.49 P
2.19 (newsreading capability, using IMAP for accessing) 70.85 382.49 P
1.09 (the news server.  This was done to support another) 70.85 371.49 P
4 (project being developed in parallel: UWIN, the) 70.85 360.49 P
3.36 (University of Washington Information Navigator.) 70.85 349.49 P
-0.17 (Pine's newsreader mode is used to access the Clarinet) 70.85 338.49 P
4.46 (news service as well as local information and) 70.85 327.49 P
(documents.) 70.85 316.49 T
-0.07 (In July 1992, Pine 3.0 was released.  This was the) 85.02 299.49 P
6.27 (first general release with support for MIME) 70.85 288.49 P
0.47 (attachments.  Just before this, work began in earnest) 70.85 277.49 P
1.25 (on a port of Pine to PC-DOS.  Getting the code to) 70.85 266.49 P
1.26 (compile was not so difficult, but restructuring it so) 70.85 255.49 P
0.53 (that arbitrarily large MIME messages and arbitrarily) 70.85 244.49 P
-0.29 (large mailboxes could be handled in a machine with a) 70.85 233.49 P
2 (640KB address space took heroic efforts by Mike) 70.85 222.49 P
0.56 (Seibel and Mark Crispin.  At the end of 1992, a test) 70.85 211.49 P
0.69 (version of PC-Pine was available.  By this time, the) 70.85 200.49 P
1.84 (Unix version was in use at over 2,000 sites in 30) 70.85 189.49 P
(countries.) 70.85 178.49 T
0.8 (1993 brought the production release of PC-Pine,) 85.02 161.49 P
0.79 (and an enhanced Unix version.  Major goals for the) 70.85 150.49 P
4.02 (remainder of 1993 include refinement of Pine's) 70.85 139.49 P
1.07 (newsreading capabilities, additional MIME support,) 70.85 128.49 P
(and aggregate operations on groups of messages.) 70.85 117.49 T
2 12 Q
(XVII.  Pine Futur) 126.56 99.15 T
(es) 217.62 99.15 T
0 10 Q
1.96 (The list of requested enhancements for Pine is) 85.02 81.49 P
-0.5 (long, but there are several significant directions worth) 70.85 70.49 P
311.69 70.85 524.16 721.15 R
7 X
V
0 X
(highlighting:) 311.69 714.49 T
2 F
1.07 (Additional newsreading support) 325.86 697.49 P
0 F
1.07 (.  By the time) 465.73 697.49 P
3.62 (this paper is published, Pine should have fairly) 311.69 686.49 P
2.8 (credible newsreading capabilities, but we) 311.69 675.49 P
2.8 (will no) 493.32 675.49 P
(doubt have more work to do in this area) 311.69 664.49 T
2 F
(.) 471.02 664.49 T
0.62 (Kerberos.) 325.86 647.49 P
0 F
0.62 ( Kerberos is a network authentication) 371.45 647.49 P
0.01 (system originally developed at MIT. It is the planned) 311.69 636.49 P
12.45 (foundation for many network computing) 311.69 625.49 P
1.49 (environments.  As version 5 of Kerberos stabilizes) 311.69 614.49 P
8.12 (and is incorporated into OSF\325S Distributed) 311.69 603.49 P
-0.08 (Computing Environment product, Kerberos is sure to) 311.69 592.49 P
8.24 (become the dominant protocol for network) 311.69 581.49 P
0.99 (authentication.  Pine and IMAP server code will be) 311.69 570.49 P
(modified to work with Kerberos.) 311.69 559.49 T
2 F
0.96 (Disconnected use, based on IMAP extensions) 325.86 542.49 P
0 F
0.96 (.) 521.66 542.49 P
2.73 (It is sometimes useful to be able to download a) 311.69 531.49 P
3.81 (selection of messages into a portable computer,) 311.69 520.49 P
1.33 (without deleting them from the server, and process) 311.69 509.49 P
0.15 (them offline.  Later, one would like to connect to the) 311.69 498.49 P
0.89 (mail server again and resynchronize the state of the) 311.69 487.49 P
1.53 (server using information from the \322cache copy\323 of) 311.69 476.49 P
0.41 (messages on the portable.  For example, transferring) 311.69 465.49 P
0.57 (back to the server the list of messages deleted while) 311.69 454.49 P
-0.1 (processing offline. Using lessons learned from a mail) 311.69 443.49 P
-0.17 (protocol that does support this functionality \050DMSP\051,) 311.69 432.49 P
5.57 (IMAP and Pine will be extended to support) 311.69 421.49 P
(disconnected use.) 311.69 410.49 T
2 F
0.74 (PEM) 325.86 393.49 P
0 F
0.74 (.  Privacy Enhanced Mail is not yet widely) 348.07 393.49 P
1.52 (available, but it is easy to believe that demand for) 311.69 382.49 P
3.25 (PEM will grow rapidly in the future.  Work is) 311.69 371.49 P
1.6 (continuing on the specification that will define the) 311.69 360.49 P
-0.47 (interaction between PEM and MIME.  It is reasonable) 311.69 349.49 P
1.31 (to expect that a future version of Pine will support) 311.69 338.49 P
(PEM in accordance with this specification.) 311.69 327.49 T
2 12 Q
(XVII.  Pine A) 357.73 309.15 T
(vailability) 426.8 309.15 T
0 10 Q
-0.27 (Although not in the public domain, Pine and Pico,) 325.86 291.49 P
1.68 (including source code, are available at no cost via) 311.69 280.49 P
0.52 (anonymous FTP from) 311.69 269.49 P
1 F
0.52 ( ftp.cac.washington.edu) 400.45 269.49 P
0 F
0.52 ( on the) 495.92 269.49 P
1.68 (Internet. Other provisions for distribution have not) 311.69 258.49 P
0.63 (been made. From the Internet, you may try out Pine) 311.69 247.49 P
14.12 (and leave comments by telneting to) 311.69 236.49 P
9.47 (demo.cac.washington.edu and logging in as) 311.69 225.49 P
1 F
(pinedemo) 311.69 214.49 T
0 F
(.) 350.55 214.49 T
2.08 (Pine is very portable and runs on a variety of) 325.86 197.49 P
10.36 (UNIX machines including Suns, RS6000s,) 311.69 186.49 P
3.9 (DECstations, NEXTs, and Sequents.  Pine uses) 311.69 175.49 P
-0.43 (termcap or terminfo files to accommodate a variety of) 311.69 164.49 P
0.61 (terminal types.  The terminal emulator must support) 311.69 153.49 P
1.6 (cursor positioning, clear screen, and reverse video.) 311.69 142.49 P
3.58 (PC-Pine is currently available in three versions:) 311.69 131.49 P
(Novell LWP, FTP's PC/TCP, and packet driver.) 311.69 120.49 T
9.85 (For further information send email to) 325.86 103.49 P
1 F
-0.03 (pine@cac.washington.edu) 311.69 92.49 P
0 F
-0.03 (.  To be informed of future) 417.49 92.49 P
14.33 (releases, send email to) 311.69 81.49 P
1 F
14.33 (pine-announce) 461.43 81.49 P
0 F
14.33 (-) 520.83 81.49 P
FMENDPAGE
%%EndPage: "9" 8
%%Page: 10 10

%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
70.87 735.31 524.41 749.48 R
7 X
0 K
V
0 9 Q
0 X
(Architectural Foundations of PINE) 70.87 743.48 T
(Proc. INET \32593) 269.81 743.48 T
(T.E. Gray) 488.72 743.48 T
72 33.32 523.57 43.32 R
7 X
V
0 10 Q
0 X
(DDB-10) 280.58 36.66 T
70.85 70.85 283.32 721.15 R
7 X
V
1 F
0 X
5.22 (request@cac.washington.edu) 70.85 714.49 P
0 F
5.22 (. To join an IMAP) 188.86 714.49 P
13.84 (discussion list, send email to:) 70.85 703.49 P
1 F
13.84 (imap-) 260 703.49 P
-0.12 (request@cac.washington.edu.) 70.85 692.49 P
0 F
-0.12 (  Pine is a trademark of) 191.36 692.49 P
2.51 (the University of Washington.  It is the work of) 70.85 681.49 P
3.08 (Laurence Lundblade, Mike Seibel, Mark Crispin,) 70.85 670.49 P
1.4 (Steve Hubert, and Sheryl Erez at the University of) 70.85 659.49 P
15.47 (Washington's Office of Computing &) 70.85 648.49 P
-0.13 (Communications.   \050NB: Lundblade is no longer with) 70.85 637.49 P
-0.17 (UW, but continues to contribute to the Project.  Upon) 70.85 626.49 P
2.75 (Laurence\325s departure, Mike Seibel became Pine\325s) 70.85 615.49 P
(chief programmer and project lead.\051) 70.85 604.49 T
2 12 Q
(XVIII.  Conclusions) 125.94 586.15 T
0 10 Q
0.94 (Pine has been extremely successful in achieving) 85.02 568.49 P
6.15 (its goals, but it is only one element of a) 70.85 557.49 P
6.52 (comprehensive email architecture.  The most) 70.85 546.49 P
1.52 (important advice I can offer others struggling with) 70.85 535.49 P
1.76 (design tradeoffs for electronic mail systems is: \050a\051) 70.85 524.49 P
1.09 (Internet mail protocols offer the best hope for truly) 70.85 513.49 P
2.01 (global email interoperability; \050b\051 MIME and PEM) 70.85 502.49 P
0.25 (will become increasingly essential standards; and \050c\051) 70.85 491.49 P
1.51 (IMAP is currently the best foundation for a robust) 70.85 480.49 P
0.48 (client-server distributed email system.  With interest) 70.85 469.49 P
2.75 (in these protocols steadily growing, we can look) 70.85 458.49 P
1.71 (forward to email systems that combine the best in) 70.85 447.49 P
4.68 (user-interface technology with sound distributed) 70.85 436.49 P
(system architecture principles.) 70.85 425.49 T
2 12 Q
(IX.  Biography) 138.93 407.15 T
0 10 Q
0.14 (Terry Gray is currently Director of Networks and) 85.02 389.49 P
8.01 (Distributed Computing at the University of) 70.85 378.49 P
1.72 (Washington, and an Affiliate Professor in the UW) 70.85 367.49 P
0.02 (Computer Science & Engineering Department.  Prior) 70.85 356.49 P
4.8 (to coming to UW, he was Vice President of) 70.85 345.49 P
-0.54 (Engineering for the Bridge Communications Division) 70.85 334.49 P
(of 3Com Corporation.) 70.85 323.49 T
12.94 (Other work experience includes Bell) 85.02 306.49 P
-0.21 (Laboratories, Ampex Corporation, and many years in) 70.85 295.49 P
0.85 (the UCLA Computer Science Department, first as a) 70.85 284.49 P
(graduate student, later in both faculty and staff roles.) 70.85 273.49 T
0.22 (He received a BS in Electronic Engineering from) 85.02 256.49 P
0.33 (Northrop Institute of Technology in 1967 and a PhD) 70.85 245.49 P
(in Computer Science from UCLA in 1978.) 70.85 234.49 T
-0.57 (For nearly 20 years his principal focus has been on) 85.02 217.49 P
4.28 (distributed system architecture, but he has also) 70.85 206.49 P
5.3 (published work in computer security, software) 70.85 195.49 P
-0.2 (engineering, distributed operating system design, and) 70.85 184.49 P
1.64 (network job control.  His primary responsibility at) 70.85 173.49 P
1.52 (UW is to foster development of a high-availability) 70.85 162.49 P
2.32 (network computing environment that encompasses) 70.85 151.49 P
3.77 (all four basic foodgroups of desktop computing) 70.85 140.49 P
-0.54 (\050Macs, PCs, Unix workstations, and X terminals\051, and) 70.85 129.49 P
3.86 (provides convenient access to both campus and) 70.85 118.49 P
(world-wide information resources.) 70.85 107.49 T
311.69 70.85 524.16 721.15 R
7 X
V
FMENDPAGE
%%EndPage: "10" 9
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 10 -1
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Times-Bold
%%Pages: 1 1
